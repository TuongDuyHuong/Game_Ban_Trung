/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_A1_ID));
    add(image1);

    home.setXY(0, 0);
    home.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_30_30_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    home.setIconXY(97, 0);
    home.setAction(buttonCallback);
    add(home);

    right.setXY(190, 263);
    right.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    right.setIconXY(97, 0);
    right.setAction(buttonCallback);
    add(right);

    left.setXY(140, 263);
    left.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_FFFFFF_SVG_ID));
    left.setAction(buttonCallback);
    add(left);

    egg2.setXY(63, 279);
    egg2.setBitmap(touchgfx::Bitmap(BITMAP_EGG_GREEN_ID));
    add(egg2);

    swap.setXY(190, 213);
    swap.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_ROTATE_LEFT_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_ROTATE_LEFT_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    swap.setIconXY(97, 0);
    swap.setAction(buttonCallback);
    add(swap);

    shoot.setXY(3, 263);
    shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_CHECKED_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_TOGGLE_RADIO_BUTTON_CHECKED_50_50_FFFFFF_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    shoot.setIconXY(95, 0);
    shoot.setAction(buttonCallback);
    add(shoot);

    line.setXY(-32, 136);
    line.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_LARGE_SECOND_PLAIN_LIGHT_ID));
    line.setWidth(304);
    line.setHeight(304);
    line.setBitmapPosition(150.0f, 0.0f);
    line.setScale(1.0f);
    line.setCameraDistance(1000.0f);
    line.setOrigo(152.0f, 152.0f, 1000.0f);
    line.setCamera(152.0f, 152.0f);
    line.setAngles(0.0f, 0.0f, 0.0f);
    line.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(line);

    gun.setXY(44, 212);
    gun.setBitmap(touchgfx::Bitmap(BITMAP_GUN_ID));
    gun.setWidth(152);
    gun.setHeight(152);
    gun.setBitmapPosition(56.0f, 34.3f);
    gun.setScale(1.0f);
    gun.setCameraDistance(1000.0f);
    gun.setOrigo(76.0f, 76.0f, 1000.0f);
    gun.setCamera(76.0f, 76.0f);
    gun.setAngles(0.0f, 0.0f, 0.0f);
    gun.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(gun);

    egg1.setXY(110, 278);
    egg1.setBitmap(touchgfx::Bitmap(BITMAP_EGG_RED_ID));
    add(egg1);

    gameover.setXY(0, 129);
    gameover.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    gameover.setLinespacing(0);
    gameover.setTypedText(touchgfx::TypedText(T_GAMEOVER));
    gameover.setVisible(false);
    add(gameover);

    win.setPosition(17, 123, 206, 46);
    win.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    win.setLinespacing(0);
    win.setTypedText(touchgfx::TypedText(T_YOU_WIN));
    win.setVisible(false);
    add(win);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &home)
    {
        //Interaction1
        //When home clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenSlideTransitionWest();
    }
    if (&src == &shoot)
    {
        //Interaction2
        //When shoot clicked call virtual function
        //Call Shoot
        Shoot();
    }
    if (&src == &left)
    {
        //Interaction3
        //When left clicked call virtual function
        //Call Left
        Left();
    }
    if (&src == &right)
    {
        //Interaction4
        //When right clicked call virtual function
        //Call Right
        Right();
    }
    if (&src == &swap)
    {
        //Interaction5
        //When swap clicked call virtual function
        //Call Swap
        Swap();
    }
}

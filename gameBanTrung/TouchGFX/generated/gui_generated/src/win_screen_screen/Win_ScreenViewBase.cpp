/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/win_screen_screen/Win_ScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Win_ScreenViewBase::Win_ScreenViewBase() :
    flexButtonCallback(this, &Win_ScreenViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    flexButton1.setBoxWithBorderPosition(0, 0, 58, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(87, 224, 58, 50);
    add(flexButton1);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_WIN_SCREEN_ID));
    add(image1);
}

Win_ScreenViewBase::~Win_ScreenViewBase()
{

}

void Win_ScreenViewBase::setupScreen()
{

}

void Win_ScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //khoitaonextlevel
        //When flexButton1 clicked call virtual function
        //Call nextlevel
        nextlevel();
    
        //chuyenmanhinhnextlevel
        //When khoitaonextlevel completed change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
}
